//// Note: Uncomment the required block of code to execute and see the expected results

// üîπ Q1. Declare Personal Info Variables
// Create 5 variables:
const fullName = "Muhammad Zakirullah"
let age = 21
let isStudent = true
const countryName = "Pakistan"
let collegeName = "GPGC Nowshera"

// üîπ Q2. Print Data Types
// Use typeof to print the data type of each variable you declared above.
console.log(typeof (fullName))       // ‚û§ string
console.log(typeof (age))           // ‚û§ number
console.log(typeof (isStudent))     // ‚û§ boolean
console.log(typeof (countryName))   // ‚û§ string
console.log(typeof (collegeName))   // ‚û§ string

// üîπ Q3. Try Reassigning a const Variable
// Attempting to change a const value should throw an error.
try {
    fullName = "ali"   // ‚ùå Will throw: TypeError: Assignment to constant variable.
} catch (error) {
    console.log("‚ùå Error:", error.message);
    console.log("üîí You cannot change a const variable once it's assigned.");
}

// üîπ Q4. Create an Undefined Variable
// Declare a variable futureGoal without assigning a value.
let futureGoal;
console.log("value:", futureGoal);       // ‚û§ value: undefined
console.log("type:", typeof (futureGoal)); // ‚û§ type: undefined

// üîπ Q5. Use Template Strings
console.log(`Hi I am ${fullName} with age of ${age} years from ${countryName}`);
// ‚û§ Hi I am Muhammad Zakirullah with age of 21 years from Pakistan

// üîπ Q6. Swap Two Variables
// Swap values of a and b using a third variable.
let a = 10;
let b = 20;
let c = null;
console.log(`Before swapping :`, `a=${a}`, `b=${b}`); // ‚û§ a=10, b=20
c = a;
a = b;
b = c;
console.log(`After swapping :`, `a=${a}`, `b=${b}`);  // ‚û§ a=20, b=10

// üîπ Q7. Declare All 7 Primitive Data Types

// String
let n = "ali";
console.log("value:", n);             // ‚û§ ali
console.log("type:", typeof (n));     // ‚û§ string

// Number
let z = 10;
console.log("value:", z);             // ‚û§ 10
console.log("type:", typeof (z));     // ‚û§ number

// Boolean
let f = true;
console.log("value:", f);             // ‚û§ true
console.log("type:", typeof (f));     // ‚û§ boolean

// Undefined
let x;
console.log("value:", x);             // ‚û§ undefined
console.log("type:", typeof (x));     // ‚û§ undefined

// Null
let y = null;
console.log("value:", y);             // ‚û§ null
console.log("type:", typeof (y));     // ‚û§ object (JavaScript quirk)

// Symbol
let w = Symbol("id");
console.log("value:", w);             // ‚û§ Symbol(id)
console.log("type:", typeof (w));     // ‚û§ symbol

// BigInt
let s = 1223456778n;
console.log("value:", s);             // ‚û§ 1223456778n
console.log("type:", typeof (s));     // ‚û§ bigint

// üîπ Q8. Use let and Try Redeclaration
// let allows re-declaration in different scopes but not in the same block
let language = "JavaScript";
try {
    let language = "JavaScript";  // ‚úÖ No error due to block scope
} catch (error) {
    console.log("‚ùå Error:", error.message);
    console.log("üîí You cannot change a const variable once it's assigned.");
}
